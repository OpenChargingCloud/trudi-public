@using TRuDI.Backend.Application
@using TRuDI.Backend.Utils
@inject ApplicationState StateService
@{
    ViewData["Title"] = "Verträge";
    int contractIndex = 0;
}

@foreach (var contract in StateService.Contracts)
{
    <div class="panel panel-primary">
        <div class="panel-heading">Zählpunkt @contract.MeteringPointId</div>
        <div class="panel-body">

            <table class="table">

                <tr>
                    <th>TAF Name</th>
                    <td>@contract.TafName</td>
                </tr>

                <tr>
                    <th>Tarifanwendungsfall</th>
                    <td>@contract.TafId.TafToFriendlyName()</td>
                </tr>

                @if (!string.IsNullOrWhiteSpace(contract.Description))
                {
                    <tr>
                        <th>Beschreibung</th>
                        <td>@contract.Description</td>
                    </tr>
                }

                <tr>
                    <th>ID des Kunden</th>
                    <td>@contract.ConsumerId</td>
                </tr>

                <tr>
                    <th>ID des Rechnungsstellers</th>
                    <td>@contract.SupplierId</td>
                </tr>

                <tr>
                    <th>ID des Kunden</th>
                    <td>@contract.ConsumerId</td>
                </tr>
                
                <tr>
                    <th>Gültig ab</th>
                    <td>@contract.Begin.ToFormatedString()</td>
                </tr>

                <tr>
                    <th>Gültig bis</th>
                    <td>@contract.End.ToFormatedString()</td>
                </tr>

                <tr>
                    <th>
                        Zähler
                    </th>

                    <td>
                        @foreach (var meter in contract.Meters)
                        {
                            @meter<br />
                        }
                    </td>
                </tr>

            </table>


            <h3>Verfügbare Abrechnungsperioden</h3>
            
            @{
                int billingPeriodIndex = 0;
                var dtpIdStart = $"dtp_start_{contractIndex}";
                var dtpIdEnd = $"dtp_end_{contractIndex}";
            }

            <form>
                <table class="table">

                    <tr>
                        <th></th>
                        <th>Von</th>
                        <th>Bis</th>
                        <th>Abgeschlossen</th>
                    </tr>



                    @foreach (var period in contract.BillingPeriods)
                {
                        <tr>
                            <td><input type="radio" name='@string.Format("{0}", contractIndex)' value='@string.Format("{0}_{1}", contractIndex, billingPeriodIndex)' onclick="selectBillingPeriod(@contractIndex, @billingPeriodIndex, '@period.Begin.ToIso8601()', '@period.End.ToIso8601()');"></td>
                            <td>@period.Begin.ToFormatedString()</td>
                            <td>@period.End.ToFormatedString()</td>
                            <td>@period.IsCompleted()</td>
                        </tr>

                        billingPeriodIndex++;
                    }
                </table>

            </form>

            <table class="table">
                <tr>
                    <th>Startzeitpunkt</th>
                    <th>Endzeitpunkt</th>
                    <th></th>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            <div class='input-group date' id="@dtpIdStart">
                                <input type='text' class="form-control" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </td>

                    <td>
                        <div class="form-group">
                            <div class='input-group date' id="@dtpIdEnd">
                                <input type='text' class="form-control" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-default" id="btnRead" onclick="startReading();">Auslesung starten...</button>
                    </td>
                </tr>
            </table>

            <script type="text/javascript">
                $(function () {
                    $("#@dtpIdStart").datetimepicker({
                        viewMode: 'days',
                        format: 'DD.MM.YYYY'
                    });
                    $("#@dtpIdEnd").datetimepicker({
                        useCurrent: false,
                        viewMode: 'days',
                        format: 'DD.MM.YYYY'
                    });
                });
            </script>

        </div>
    </div>

                            contractIndex++;
                        }

<script type="text/javascript">

    var selectedContract = -1;
    var selectedBillingPeriod = -1;

    function selectBillingPeriod(contractIndex, billingPeriodIndex, startTime, endTime) {
        console.log(contractIndex, billingPeriodIndex, startTime, endTime);

        selectedContract = contractIndex;
        selectedBillingPeriod = billingPeriodIndex;

        $("#dtp_start_" + contractIndex).data("DateTimePicker").maxDate(false);
        $("#dtp_start_" + contractIndex).data("DateTimePicker").minDate(false);
        $("#dtp_start_" + contractIndex).data("DateTimePicker").maxDate(moment(startTime));

        $("#dtp_end_" + contractIndex).data("DateTimePicker").minDate(false);
        $("#dtp_end_" + contractIndex).data("DateTimePicker").maxDate(false);
        $("#dtp_end_" + contractIndex).data("DateTimePicker").minDate(moment(endTime));

        $("#dtp_start_" + contractIndex).data("DateTimePicker").date(moment(startTime));
        $("#dtp_end_" + contractIndex).data("DateTimePicker").date(moment(endTime));
    }

    function startReading() {
        if (selectedBillingPeriod == -1 || selectedContract == -1) {
            return;
        }

        $.ajax({
            url: '/Contracts/StartReadout',
            type: "POST",
            data: "contractIndex=" + selectedContract + "&billingPeriodIndex=" + selectedBillingPeriod + "&startTime=" + encodeURIComponent($("#dtp_start_" + selectedContract).data("DateTimePicker").date().toISOString()) + "&endTime=" + encodeURIComponent($("#dtp_end_" + selectedContract).data("DateTimePicker").date().toISOString()),
            contentType: 'application/x-www-form-urlencoded',
            processData: false,
            success: function(result) {
                window.location.href = "/Progress";
            },
            error: function (err) { }
        });
    }

</script>