@using System.Security.Cryptography.X509Certificates
@using TRuDI.Backend.Application
@using TRuDI.Backend.Utils;
@inject ApplicationState StateService
@{
    ViewData["Title"] = "Details zum Smart Meter Gateway";
}


<div class="panel panel-primary">
    <div class="panel-heading">Firmware-Version</div>
    <div class="panel-body">


        @if (StateService.LastConnectResult?.FirmwareVersions != null)
            {
            <table class="table">
                @foreach (var versionItem in StateService.LastConnectResult.FirmwareVersions)
                {
                    <tr>
                        <th>
                            @versionItem.Component
                        </th>
                        <td>
                            <label>Version</label>
                            <div>
                                @versionItem.Version
                            </div>
                            @if (!string.IsNullOrWhiteSpace(versionItem.Hash))
                            {
                                <label>Prüfsumme</label>
                                <div style="font-family: monospace; word-break: break-all;">
                                    @versionItem.Hash
                                </div>
                            }
                        </td>
                    </tr>
                }

            </table>
        }

    </div>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">Zertifikat der TLS-Verbindung</div>
    <div class="panel-body">

        @if (StateService.LastConnectResult?.Certificate != null)
        {
            @await Component.InvokeAsync("CertDetailsView", new { cert = StateService.LastConnectResult?.Certificate })
        }

    </div>
</div>

<a href="/BreadCrumb/ClosePage">Zurück</a>

