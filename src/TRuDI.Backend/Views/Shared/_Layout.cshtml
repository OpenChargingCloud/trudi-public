@using TRuDI.Backend.Application
@inject ApplicationState StateService
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TRuDI - @ViewData["Title"]</title>

    <environment>
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.css" />
        <link rel="stylesheet" href="~/lib/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" />
        <link rel="stylesheet" href="~/css/site.css" />
    </environment>
</head>
<body>

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @if (StateService.OperationMode == OperationMode.DisplayFunction)
            {
                <div class="navbar-brand">TRuDI Abrechnungskontrolle</div>
            }
            else
            {
                <div class="navbar-brand">TRuDI Transparenzfunktion</div>
            }
            
            <h2>@ViewData["Title"]</h2>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            @*<ul class="nav navbar-nav">
                <li class="active"><a href="#">Home</a></li>
                <li><a href="#about">About</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>*@
            <div class="nav navbar-nav navbar-right">
                <ul class="breadcrumb">
                @foreach (var item in StateService.BreadCrumbTrail.Items)
                {
                    <li><a href="/BreadCrumb?id=@item.Id">@item.Name</a></li>
                }
                </ul>
            </div>
        </div><!--/.nav-collapse -->
    </div>
</nav>
    


<script>
    if (typeof module === 'object') {
        window.module = module;
        module = undefined;
    }
</script>

<environment>
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/moment/min/moment-with-locales.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <script src="~/js/site.js"></script>
    <script src="~/lib/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>
</environment>

<script>if (window.module)
    module = window.module;</script>

@RenderSection("Scripts", required: false)

<div class="container body-content">
    <div class="row">
        <div class="col-md-8">
            <h2> </h2>
        </div>

        <div class="col-md-8" id="errorContainer">
            @await Html.PartialAsync("_ErrorMessage", null, ViewData)
            @RenderBody()
        </div>
        @if (StateService.ActiveHanAdapter?.GatewayImageView != null)
        {
            <div class="col-md-4">
                <div class="panel panel-primary">
                    <div class="panel-heading">@StateService.ActiveHanAdapter.DeviceId</div>
                    <div class="panel-body" style="overflow: hidden;">
                        @await Component.InvokeAsync(StateService.ActiveHanAdapter.GatewayImageView, new { deviceId = StateService.ActiveHanAdapter.DeviceId })
                        @if (!ViewData.ContainsKey("IsGatewayDetails"))
                        {
                            <a asp-controller="GatewayDetails">Details zum Smart Meter Gateway</a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
</body>
</html>
